using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Text;

namespace BusinessLibrary.Models
{
    public class Dietician
    {
        #region Contructors

        /// <summary>
        /// Default constructor. 
        /// Need for serialization purposes.
        /// </summary>
        public Dietician()
        {
        }

        /// <summary>
        /// Fields constructor.
        /// </summary>
        public Dietician(int id, DateTime dob, string name, string practice, string doctorate, string bachelorsDegree, string associateDegree, string certification)
        {
            Id = id;
            Dob = dob;
            Name = name;
            Practice = practice;
            Doctorate = doctorate;
            BachelorsDegree = bachelorsDegree;
            AssociateDegree = associateDegree;
            Certification = certification;
        }

        /// <summary>
        /// Clone/Copy constructor.
        /// </summary>
        /// <param name="instance">The object to clone from.</param>
        public Dietician(Dietician instance)
            : this(instance.Id, instance.Dob, instance.Name, instance.Practice, instance.Doctorate, instance.BachelorsDegree, instance.AssociateDegree, instance.Certification)
        {
        }

        #endregion

        #region Properties

        /// <summary>
        /// Id generated by our system upon creation of a new instance.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int Id { get; set; }

        [JsonProperty(PropertyName = "dob")]
        public DateTime Dob { get; set; }

        /// <summary>
        /// First name of the client.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Instructor's training type
        /// </summary>
        [JsonProperty(PropertyName = "practice")]
        public string Practice { get; set; }

        /// <summary>
        /// Instructor's training philosophy
        /// </summary>
        [JsonProperty(PropertyName = "Doctorate")]
        public string Doctorate { get; set; }

        /// <summary>
        /// Instructor's exercise modality
        /// </summary>
        [JsonProperty(PropertyName = "bachelorsDegree")]
        public string BachelorsDegree { get; set; }

        /// <summary>
        /// Instructor's number of clientele
        /// </summary>
        [JsonProperty(PropertyName = "associateDegree")]
        public string AssociateDegree { get; set; }

        /// <summary>
        /// Instructor's credentials/accreditation
        /// </summary>
        [JsonProperty(PropertyName = "certification")]
        public string Certification { get; set; }

        #endregion

        #region Methods

        /// <summary>
        /// Overrides the .ToString method.
        /// </summary>
        public override string ToString()
        {
            return Name;
        }

        #endregion
    }
}
